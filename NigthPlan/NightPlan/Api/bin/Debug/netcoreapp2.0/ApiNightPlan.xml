<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Api</name>
    </assembly>
    <members>
        <member name="M:Api.Controllers.AutenticacionController.Post(Core.DTO.LoginDTO)">
            <summary>
            Devuelve un true o false dependiendo de si el usuario y contraseña estan correctos
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.BarriosController.Get">
            <summary>
            Trae todos los barrios
            </summary>
            <param></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CaracteristicasController.Get">
            <summary>
            Trae todas las caracteristicas
            </summary>
            <param></param>
            <returns></returns>    
        </member>
        <member name="M:Api.Controllers.EstablecimientosController.Get(System.Int32,System.Int32)">
            <summary>
            Devuelve los establecimientos destacados, según el offset y limit que se pase en los parametros
            </summary>
            <param name="limit"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.EstablecimientosController.Get(System.Int32)">
            <summary>
            Esto es un test
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.EstablecimientosController.Post(Core.DTO.CrearEstablecimientos.CrearEstablecimientosDTO)">
            <summary>
            Crea un establecimiento
            </summary>
            <param name="establecimiento"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.GastronomiaController.Get">
            <summary>
            Trae todas las opciones de gastronomia
            </summary>
            <param></param>
            <returns></returns>    
        </member>
        <member name="M:Api.Controllers.GruposController.Get(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Devuelve los grupos que cumplan con el filtro que puso el usuario
            </summary>
            <param name="id_usuario"></param>
            <param name="search"></param>
            <param name="limit"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.GruposController.Get(System.Int32)">
            <summary>
            Devuelve los usuarios que pertenecen al grupo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.GruposController.Post(Core.DTO.CrearGrupo.GruposDTO)">
            <summary>
            Crea el grupo
            </summary>
            <param name="grupo"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.PreferenciasController.Post(Core.DTO.GuardarPreferenciasDTO)">
            <summary>
            Guarda las preferencias del usuario
            </summary>
            <param name="preferenciasUsuario"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UsuariosController.Get(System.String)">
            <summary>
            Devuelve los usuarios que coincidan con el email
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UsuariosController.Get(System.Int32,System.Int32,System.Int32)">
            <summary>
            Devuelve los grupos del usuario
            </summary>
            <param name="id"></param>
            <param name="limit"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UsuariosController.Post(Core.DTO.UsuarioDTO)">
            <summary>
            Guardar los datos del usuario 
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UsuariosController.Put(System.Int32,Core.DTO.UsuarioDTO)">
            <summary>
            Actualizar los datos del usuario
            </summary>
            <param name="user"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.ValuesController.Post(Core.DTO.CrearGrupo.GruposDTO)">
            <summary>
            Esto es un test
            </summary>
            <param name="Grupos"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.VotacionController.Get(System.Int32)">
            <summary>
            Devuelve el resultado de la votacion
            </summary>
            <param name="idGrupo"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.VotacionController.Post(Core.DTO.VotacionDTO)">
            <summary>
            Guarda el voto de cada usuario 
            </summary>
            <param name="votacion"></param>
            <returns></returns>
        </member>
    </members>
</doc>
